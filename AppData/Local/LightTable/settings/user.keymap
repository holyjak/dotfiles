;; User keymap
;; -----------------------------
;; Keymaps are stored as a set of diffs that are merged together together
;; to create the final set of keys. You can modify these diffs to either add
;; or subtract bindings.
;;
;; Like behaviors, keys are bound by tag. When objects with those tags are active
;; the key bindings are live. Keys can be bound to any number of Light Table commands,
;; allowing you the flexibility to execute multiple operations together. To see a list
;; of all the commands you can execute, start typing a word related to the thing you
;; want to do in between the square brackets (e.g. type "editor").

;; JH - special notes
;; ------------------
;; Left Alt (Option_L) rempped to cmd-ctrl-alt (r. alt enters accented chars)
;; (using KeyRemap4MacBook)
{:+ {:app {}

     :editor {"cmd-ctrl-alt-w" [:editor.watch.watch-selection]
              "cmd-ctrl-alt-shift-w" [:editor.watch.unwatch]
              "pmeta-shift-=" [:window.zoom-in]
              "pmeta--" [:window.zoom-out]
              ;; duplicate line - https://github.com/masondesu/lighttable-keymap/blob/master/user.keymap
              ;; ^- stops cmd-c, cmd-v from vvorking
;;               "pmeta-shift-d" [:editor.select-line
;;                              :editor.copy
;;                              :editor.selection.clear
;;                              :editor.new-line-indent
;;                              :editor.line-start
;;                              :editor.paste]
              "ctrl-a" [:editor.line-start-smart]
              }
     :editor.clj.common {
                   ;; moving in a sea of parens - jh
                  "ctrl-right" [:subpar.move.forward]
                  "ctrl-left" [:subpar.move.backward]
                  "ctrl-down" [:subpar.move.forward-down]
                  "ctrl-up" [:subpar.move.forward-up]
                  ;; grow and shrink - jh
                  "ctrl-shift-0" [:paredit.grow.right]    ;; = ctrl-) on mac
                  "ctrl-shift-]" [:paredit.shrink.right]  ;; ctrl-}
                  "ctrl-shift-9" [:paredit.grow.left]     ;; ctrl-(
                  "ctrl-shift-[" [:paredit.shrink.left]   ;; ctrl-{
                  ;; splice & kill
                  "cmd-ctrl-alt-s" [:paredit-plus.splice-sexp] ;; remove 1 level of surrounding parens
                  "pmeta-up" [:paredit-plus.splice-sexp-killing-backward]
                  "pmeta-down" [:paredit-plus.splice-sexp-killing-forward]
                  "ctrl-k" [:paredit-plus.kill]
                  ;; split & join - jh
                  "cmd-ctrl-alt-shift-s" [:paredit-plus.split-sexp]
                  "cmd-ctrl-alt-shift-j" [:paredit-plus.join-sexps]
                  ;; select
                  "cmd-ctrl-alt-a" [:paredit.select.parent]
                  "cmd-ctrl-alt-shift-a" [:paredit.select.clear]
                  ;; wrap in parens
                  "cmd-ctrl-alt-shift-9" [:paredit-plus.wrap-round] ;; l.alt-(
                  "cmd-ctrl-alt-[" [:paredit-plus.wrap-square]      ;; l.alt-[
                  "cmd-ctrl-alt-shift-[" [:paredit-plus.wrap-curly] ;; l.alt-{
                  "cmd-ctrl-alt-shift-'" [:paredit-plus.wrap-quote]};; l.alt-"
     }
   }
